import { useEffect, useState } from "react";
import {
  connectWallet,
  getCurrentWalletConnected,
  mintNFT,
} from "./util/interact.js";

const Minter = (props) => {
  const [walletAddress, setWallet] = useState("");
  const [status, setStatus] = useState("");

  const [name, setName] = useState("");
  const [name2, setName2] = useState("");
  const [description, setDescription] = useState("");
  const [url, setURL] = useState("");

  useEffect(async () => {
    const { address, status } = await getCurrentWalletConnected();

    setWallet(address);
    setStatus(status);

    addWalletListener();
  }, []);

  function addWalletListener() {
    if (window.ethereum) {
      window.ethereum.on("accountsChanged", (accounts) => {
        if (accounts.length > 0) {
          setWallet(accounts[0]);
          setStatus("üëÜüèΩ ‡≤Æ‡≥á‡≤≤‡≤ø‡≤® ‡≤™‡≤†‡≥ç‡≤Ø ‡≤ï‡≥ç‡≤∑‡≥á‡≤§‡≥ç‡≤∞‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤∏‡≤Ç‡≤¶‡≥á‡≤∂‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤∞‡≥Ü‡≤Ø‡≤ø‡≤∞‡≤ø.");
        } else {
          setWallet("");
          setStatus("ü¶ä ‡≤Æ‡≥á‡≤≤‡≤ø‡≤® ‡≤¨‡≤≤ ‡≤¨‡≤ü‡≤®‡≥ç ‡≤Ö‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤ø‡≤ï‡≥ä‡≤Ç‡≤°‡≥Å ‡≤Æ‡≥Ü‡≤ü‡≤æ‡≤Æ‡≤æ‡≤∏‡≥ç‡≤ï‡≥ç‚Äå‡≤ó‡≥Ü ‡≤∏‡≤Ç‡≤™‡≤∞‡≥ç‡≤ï‡≤™‡≤°‡≤ø‡≤∏‡≤ø.");
        }
      });
    } else {
      setStatus(
        <p>
          {" "}
          ü¶ä{" "}
          <a target="_blank" href={`https://metamask.io/download.html`}>
            ‡≤®‡≥Ä‡≤µ‡≥Å ‡≤Æ‡≥Ü‡≤ü‡≤æ‡≤Æ‡≤æ‡≤∏‡≥ç‡≤ï‡≥ç, (‡≤á‡≤•‡≤ø‡≤∞‡≤ø‡≤Ø‡≤Æ‡≥ç ‡≤µ‡≤∞‡≥ç‡≤ö‡≥Å‡≤µ‡≤≤‡≥ç ‡≤µ‡≥ç‡≤Ø‡≤æ‡≤≤‡≥Ü‡≤ü‡≥ç) ‡≤Ö‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≥ç‡≤•‡≤æ‡≤™‡≤ø‡≤∏‡≤¨‡≥á‡≤ï‡≥Å
          </a>
        </p>
      );
    }
  }

  const connectWalletPressed = async () => {
    const walletResponse = await connectWallet();
    setStatus(walletResponse.status);
    setWallet(walletResponse.address);
  };

  const onMintPressed = async () => {
    const { success, status } = await mintNFT(url, name, name2, description);
    setStatus(status);
    if (success) {
      setName("");
      setName2("");
      setDescription("");
      setURL("");
    }
  };

  return (
    <div className="Minter">
      <button id="walletButton" onClick={connectWalletPressed}>
        {walletAddress.length > 0 ? (
          "‡≤∏‡≤Ç‡≤™‡≤∞‡≥ç‡≤ï‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü: " +
          String(walletAddress).substring(0, 6) +
          "..." +
          String(walletAddress).substring(38)
        ) : (
            <span>ü¶ä ‡≤µ‡≤æ‡≤≤‡≥Ü‡≤ü‡≥ç ‡≤Ö‡≤®‡≥ç‡≤®‡≥Å
            ‡≤ú‡≥ã‡≤°‡≤ø‡≤∏‡≤ø</span>
          )}
      </button>
      <br></br><br></br><br></br>
      <h1>
        '‡≤¨‡≥ç‡≤≤‡≤æ‡≤ï‡≥ç ‡≤ö‡≥à‡≤®‡≥ç' ‡≤Ü‡≤ß‡≤æ‡≤∞‡≤ø‡≤§</h1>
      
      <h2 id="title">
        üé¨'‡≤ö‡≤≤‡≤®‡≤ö‡≤ø‡≤§‡≥ç‡≤∞ ‡≤∂‡≥Ä‡≤∞‡≥ç‡≤∑‡≤ø‡≤ï‡≥Ü'‡≤Ø ‡≤®‡≥ä‡≤Ç‡≤¶‡≤£‡≤ø</h2>
      <p>
        ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤∏‡≥ç‡≤µ‡≤§‡≥ç‡≤§‡≤ø‡≤® ‡≤ï‡≥ä‡≥¶‡≤°‡≤ø, ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤µ‡≤ø‡≤µ‡≤∞‡≤£‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≥á‡≤∞‡≤ø‡≤∏‡≤ø
      </p>
      <form>
        <h2>‡≤∏‡≥ç‡≤µ‡≤§‡≥ç‡≤§‡≤ø‡≤® ‡≤ï‡≥ä‡≥¶‡≤°‡≤ø: </h2>
        <input
          type="text"
          placeholder="
          ‡≤â‡≤¶‡≤æ‡≤π‡≤∞‡≤£‡≥Ü‡≤ó‡≥Ü: https://gateway.pinata.cloud/ipfs/<hash>"
          onChange={(event) => setURL(event.target.value)}
        />
        <h2>‡≤ï‡≤®‡≥ç‡≤®‡≤°‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤∂‡≥Ä‡≤∞‡≥ç‡≤∑‡≤ø‡≤ï‡≥Ü: </h2>
        <input
          type="text"
          placeholder="
          ‡≤â‡≤¶‡≤æ‡≤π‡≤∞‡≤£‡≥Ü‡≤ó‡≥Ü: ‡≤™‡≥ç‡≤∞‡≤ö‡≤Ç‡≤° ‡≤ï‡≥Å‡≤≥‡≥ç‡≤≥"
          onChange={(event) => setName(event.target.value)}
        />
        <h2>‡≤Ü‡≤Ç‡≤ó‡≥ç‡≤≤‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤∂‡≥Ä‡≤∞‡≥ç‡≤∑‡≤ø‡≤ï‡≥Ü: </h2>
        <input
          type="text"
          placeholder="For example: Prachanda Kulla"
          onChange={(event) => setName2(event.target.value)}
        />
        <h2>‚úçÔ∏è‡≤µ‡≤ø‡≤µ‡≤∞‡≤£‡≥Ü: </h2>
        <input
          type="text"
          placeholder="
          ‡≤â‡≤¶‡≤æ‡≤π‡≤∞‡≤£‡≥Ü‡≤ó‡≥Ü: ‡≤à ‡≤ö‡≤ø‡≤§‡≥ç‡≤∞‡≤µ‡≥Å ‡≤â‡≤§‡≥ç‡≤§‡≤Æ‡≤µ‡≤æ‡≤ó‡≤ø‡≤∞‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü, ‡≤è‡≤ï‡≥Ü‡≤Ç‡≤¶‡≤∞‡≥Ü ;)"
          onChange={(event) => setDescription(event.target.value)}
        />
      </form>
      <button id="mintButton" onClick={onMintPressed}>
        üìÉ‡≤Æ‡≥Å‡≤¶‡≥ç‡≤∞‡≤ø‡≤∏‡≥Å
      </button>
      <p id="status" style={{ color: "red" }}>
        {status}
      </p>
    </div>
  );
};

export default Minter;
